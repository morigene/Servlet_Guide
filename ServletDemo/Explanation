
#  Servlet 
------------------------------------------------------
Servlet can be web component to create dynamic pages.


6 steps to create  servlet applcation example
=================================================

It can created in three ways:
=================================================
1. By implementing Servlet interface
2. By Inheriting Generic Servlet
3. By Inheriting HttpServlet class.

The mostly used approach is by extending HttpServlet because it provide 
specific methods such as doGet(), doPost(), doHead(). 

6 steps

1.Create directory structure.
2.Create Servlet
3.Compile the servlet.
4.Create a deployment descriptor.
5.Start the server and deploy the project
6.Access the servlet.

Directory sturcture
=======================================================
Define where to put all different type of file so that web container may get information and respond to client

Create Servlet
=======================================================
1. By implementing Servlet interface
2. By Inheriting Generic Servlet
3. By Inheriting HttpServlet class.

Compile the servlet. 
========================================================
1.servlet-api.jar  // Apache Tomcat
2.weblogic.jar     //Weblogic
3.javaee.jar      //GlassFish  
4.javaee.jar   // JBoss

Create a deployment descriptor.
=======================================================
It is xml file from which web contain gets information about the servlet to be invoked

How Servlet Works
========================================================
The web container is responsible to handle the request. Let's see how it handle the request.

The server checks if the servlet is requested at first time

If yes We container doew the following:
.Loads the servlet class.
.Instantiates the Servlet class
.Call the init method passing the ServletConfig object.
else
.calls the service passing request and response objects.
How web container handle the servlet request
=======================================================
.maps the request with the servlet in web.xml  file.
.Create request and response object for this request.
.Call the service method on the thread.
.The public service method internally calls the protected service method  .
.The protected service method calls the doGet method depending on the type of request.
.The doGet method generates the response and it is passed to the client.
.After sending the response the web container delete the request and response object. The thread is contained in thread pool 
or deleted depending on server implementation.

SendRedirect
======================================================
sendRedirect()
It is used to redirect response to another resources. it can be jsp,servlet or html.
It works on client because it uses URL browser.
Difference between SendRedirect and forward
======================================================
A.sendRedirect()
1.work within and outside the server
2.It is always send a new request.
3.sendRedirect methods work on client side
4.sendRedirect(servlet)
B.Forward
1.Work only within the server.
2.send request and response to another servlet.
3.forward method work on server side.
4.forward(request, response).

ServletConfig Interface
====================================================
An object of Servlet config is used by web container for each servlet. It can be used to get 
configuration information from web.xml.

ServletContext Interface
====================================================
An object of servletContext is created by the web container at the time of deploying a project.
This is object can be used to get configuration information from web.xml.

If any information is shared to many servle, it is better to provide from web.xml file using 
<context-param> element.
Usage of ServletContext interface
-----------
1.The object of servletContext provide interface between container and servlet
2.The object of servletContext can be used to get configuration information from web.xml
3.The object of servletcontext can be used to get or remove attribute.
4.The object of servletContext can be used to provide inter-application communication.
ServletContext Method
---------
1.public String getInitParameter(String name)
2.public Enumeration getInitParameterNames()
3.public Object getAttribute(String name)
4.public Enumeration getInitParameterName();
5.public void removeAttribute(String name)
How to get the object of servletContext() Interface.
----------
1.getServletContext() method.
2.getServletContext() method.
Attribute in Servlet
=========================================================
It is an object that can be set, get or removed from the following scope:
1.request scope
2.session scope
3.application scope.
The servlet programmer can pass information from one servlet to another using servlet..
It is just like passing an object from one class to another so that we can reuse  the same object again and again.
Attribute specific methods of  ServletRequest, ServletSession and ServletContext Interface.
---------------------------
public void setAtrribute(String name, Object object).
public Object getAttribute(String name)
public Enumeration getInitParameterName()
public void removeAttribute(String name).

Session Tracking
=========================================================
Session simply means a particular interval of time.
Session Tracking
-------------------
It is a way to maintain state(data) of an user. It is also known as session management in 
servlet.
TTP Protocal is stateless so we need to maintain state using session tracking techniques.
HTTP is stateless that means each request is considered as the new request.
why use session tracking 
--------------------------------
To recognize the user. It is used to recognize the particular user.
4 Techniques used in session tracking
----------------------------------------
1.cookies.
2.Hidden Form field
3.URL Rewriting
4.URL Rewriting
5.HttpSession
A cookie is a small piece of information that is persisted between the multiple client requests.
A cookie has a name, a single value, and option attributes such as a comment, path and domain qualifies, a maximum age and version number
Type of Cookie
----------------------------------------
2 type of cookies in servlets.
1.Non-perisistent cookie
2.Peristent cookie

Non-Perisistent cookie
It is valid for single session only.It is  removed each time when user closes the browser
Perisistent cookie
It is valid for multiple session.It is not removed eacher time user closes windows. Removed only when user
logout or sign out.
Advantages of cookies
---------
1.Simplest techniques to maintain the state
2.Cookies are maintained at client side.
Disadvantages of cookies
-----------------
1.It will not work if cookie is disabled from the browser.
2.Only textual information can be set in cookie object.
Cookie class
javax.servlet.http.cookie class provides the functionality of using cookies. It provide useful methods for cookies.

Constructor                  Description
----------------------------------------------
cookie()                   construct cookie
cookie(String name, String value)  construct cookie with specified name and value

Useful Methods of cookie class
----------------------------------------------
public void setMaxAge(int expry)
public String getName()
public String getValue()
public void setName(String name)
public void setValue(String value)
Other Method required for cookies
-----------------------------------
1.public void addCookie(Cookie ck): method of HttpServletResponse interface is used to add cookie in response object.
2.public void Cookie[] getCookie(): method of htttpservletRequest interface is used to return all the cookies from the browser.
How to set cookies
----------------------------------
Cookie ck = new Cookie("user", "sono jaiswal")
response.addCookie(ck);
How to delete cookie
-----------------------------------
Cookie ck = new Cookie("user","") // deleting value of cookie
ck.setMaxAge(0) // changing the maximum age to 0 seconds.
response.addCookie(cd)

How to get Cookies
------------------------------------
Cookie ck[] =  request.getCookies();
for (int i = 0 ; i < ck.lenght ; i++){
 out.println("<br> "+ck[i].getName() + " "ck[i].getValue());
}
HIDDEN FORM FIELD AS COOKIE
======================================================================
It is also used to maintain the state.
Advantages
------------------------
It is working either cookie is disabled or not.
Disavantagest
-----------------------
1.It is maintained on server side.
2.The Submission form is also required
3.Only textual information can be maintained.
URL Rewriting
=====================================================================
In URL rewriting, we append a token or identifier to the URL
of the next servlet or next resource.
We can send parameter name/value pairs using the following format
url?name1=value&name2=value&??
Advantage of URL Rewriting
---------------------------
1.It will always work whether cookie is disabled or not
2.Extra from submission is not required on each page.
Disadvantage of URL Rewriting
----------------------------
1.It will work only with links
2.It can send only textual information.
SESSION(HttpSession Interface)
=======================================================================
In such case a container create session id for each user. A container uses this id to identify a particular user.
An object of HttpSession used to perform two tasks:
1.Bind Objects.
2.View and manipulate information about session such session identifier,creation time and last accessed time.
How to get Http Session Object
-------------------------
public void getSession() Return a session associated with this request if no one create one.
public void getSession(boolean create) return  current httpsession with this request or if no current session 
return true and create new request

Common Method of HttpSession Interface
------------------------
public String getId()
public long getCreatingTime() return time sesseion since created
public long getLastAccessedTime()
public void invalidate() unbind any object bound it. 
Example
Go in programming area
--------------------------
Servlet Filter
==================================================================
A filter is an object that is invoked at the preprocessing and postprocessing request.

It is mainly used to perform filtering tasks such as conversion, logging, compression,encryption and decryption, input validation
etc.
The Servlet Filter is pluggable, i.e Its entry is defined in web.xml if we remove the entry of filter from the web.xml file, filter will be removed
automatically, we don't need to change the servlet.
So maintenance cost will be less.

Usage of Filter
---------------
1.recording all incoming requests.
2.logs the IP address of the computers from which the request originate.
3.Conversion
4.data compression
5.encryption and decryption
6.input validation etc.
Advantage of Filter
-------------------
1.Filter is pluggable
2.One Filter don't have dependency onto another resource.
3.Less Maintenance.
Filter API
---------------------
1.Filter
2.FilterChain
3.FilterConfig
1.Filter Interface
For creating any filter, you must implement the Filter Interface
Method of filiter
---------------------
1.public void init
2.public void doFilter() when request any resources in which filter mapps.
public void doFilter(HttpServletRequest request,HttpServletResponse response, FilterChain chain)
3.public void destroy().





